spring.application.name=steamchatserver
# 서버 설정
server.port=8080

# PostgreSQL 데이터베이스 설정
spring.datasource.url=jdbc:postgresql://localhost:5432/steam_chat_db
spring.datasource.username=my_user
spring.datasource.password=1234
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA 설정
# Hibernate가 엔티티 기반으로 테이블 생성
spring.jpa.hibernate.ddl-auto=update
# SQL 출력 옵션 (개발 시 확인용)
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.open-in-view=false

# Spring Batch 메타데이터 테이블 자동 생성
spring.batch.jdbc.initialize-schema=always

# HikariCP 설정
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# Steam API 설정
steam.api.key=15EB37FCE8908857DC4CD5091F09482
steam.spy.top100-url=https://steamspy.com/api.php?request=top100in2weeks
steam.store.details-url=https://store.steampowered.com/api/appdetails

# Steam OpenID 설정
steam.openid.endpoint=https://steamcommunity.com/openid
steam.return.url=http://localhost:3000


# JWT 설정
jwt.secret=18
jwt.expiration=86400000

# 로깅 설정
logging.level.com.example=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

schedule.cron=0 0 0 * * ?
